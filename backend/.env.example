# Database Configuration
DATABASE_URL=postgresql://app_user:your_password@localhost:5432/transporte_db
DB_HOST=localhost
DB_PORT=5432
DB_NAME=transporte_db
DB_USER=app_user
DB_PASSWORD=your_password
DB_MIN_POOL_SIZE=10
DB_MAX_POOL_SIZE=50

# Server Configuration
HOST=0.0.0.0
PORT=8000
WORKERS=4
LOG_LEVEL=INFO
DEBUG=False

# ==========================================
# TOKEN CONFIGURATION
# ==========================================

# Duración del token (en SEGUNDOS)
# Testing:    600 segundos = 10 minutos
# Producción: 2592000 segundos = 30 días (30 * 24 * 60 * 60)
TOKEN_TTL_SECONDS=2592000

# Umbral para renovación automática (en MINUTOS antes de expirar)
# Testing:    7 minutos (renovar cuando falten 7 min)
# Producción: 10080 minutos = 7 días (7 * 24 * 60)
TOKEN_RENEWAL_THRESHOLD_MINUTES=10080

# Periodo de gracia (en DÍAS)
# Durante este tiempo, el token viejo y nuevo coexisten
TOKEN_GRACE_PERIOD_DAYS=7

# Limpieza de tokens antiguos (en DÍAS)
CLEANUP_TOKEN_DAYS=30

# Intervalo de verificación para renovación de tokens (en SEGUNDOS)
# Con qué frecuencia se verifica si un token necesita renovación
# Testing:    60 segundos = 1 minuto (10 verificaciones en 10 min)
# Producción: 3600 segundos = 1 hora (720 verificaciones en 30 días)
# IMPACTO: En producción, 3600s reduce queries de 43,200 a 720 por periodo
TOKEN_RENEWAL_CHECK_INTERVAL_SECONDS=3600

# ==========================================
# CAMBIO DE MODO RÁPIDO:
# Para Testing:    cp .env.testing .env
# Para Producción: cp .env.production .env
# ==========================================

# CORS Configuration (IMPORTANTE: Usar formato JSON para listas)
ALLOWED_ORIGINS=["http://localhost:3000","http://localhost:5173"]

# WebSocket Configuration
WS_HEARTBEAT_INTERVAL=30
WS_TIMEOUT=300

# Sistema Config
OUT_OF_ROUTE_THRESHOLD_M=200
STOP_SPEED_THRESHOLD=1.5
STOP_TIME_THRESHOLD_S=120
